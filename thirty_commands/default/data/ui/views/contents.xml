<dashboard version="1.1" theme="light">
  <label>Thirty Commands in Thirty Minutes</label>
  <row>
    <panel>
      <title>Thirty Commands (or more!) in Thirty Minutes (but likely not less!)</title>
      <html><p>Welcome to our talk. This is the agenda, and also a reference for later.  Follow along as we build some sample data, then do all sorts of fun searches against that data!</p></html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Generating Commands</h1>
        <p><tt><a href="gentimes">gentimes</a></tt> and <tt><a href="makeresults">makeresults</a></tt> can *directly* create events.  The former can generate a sequence of time-stamped events, and the latter can generate either a single stub event, or can be used to generate data from a small inline CSV or JSON data set.</p>
        <p>The last of the three is <tt><a href="outputlookup">outputlookup</a></tt> which can be used to take some existing search/data and "save it" so that you can pull it up again.  </p>
        <p>These three commands make up the cornerstone of our test data.  Do note there's also a <tt>outputcsv</tt> that can function much like outputlookup, but it saves the file in a different location which can't actually be used as a <tt>lookup</tt>.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="gentimes">gentimes</a></tt></td><td style="border: 1px solid black;">Generates a set of timestamped fake events.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="makeresults">makeresults</a></tt></td><td style="border: 1px solid black;">Can be used to create a single empty event, or used to generate small data sets from CSV or JSON formatted data.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="outputlookup">outputlookup</a></tt></td><td style="border: 1px solid black;">Takes any other output and saves it onto disk to be read back in with <tt><a href="inputlookup">inputlookup</a></tt></td></tr>
          <tr><td style="border: 1px solid black;"><tt>outputcsv</tt></td><td style="border: 1px solid black;">NOT covered here, but is much like outputlookup except it creates files in a different folder.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>What can I do with the data I just wrote using outputlookup?</h1>
        <p>Now that we have data "created", how might we read that back in to use it again?</p>
        <p><tt><a href="inputlookup">inputlookup</a></tt> and <a href="lookup"><tt>lookup</tt></a>to the rescue!</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="inputlookup">inputlookup</a></tt></td><td style="border: 1px solid black;">Directly reads in the contents of CSV files that are stored in the 'lookups' directory.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="lookup">lookup</a></tt></td><td style="border: 1px solid black;">Uses the CSV file "dynamically", looking up the matching values from the events into the lookup, and returning other fields from the lookup.</td></tr>
          <tr><td style="border: 1px solid black;"><tt>inputcsv</tt></td><td style="border: 1px solid black;">NOT covered here, but is much like inputlookup only reads files created by outputcsv and which live in a different folder.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Making new fields, and editing existing</h1>
        <p>An extremely useful "swiss army knife" command is <tt><a href="eval">eval</a></tt> which lets us dynamically create new fields on the fly.  This is a lot more powerful than you might think at first.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="eval">eval</a></tt></td><td style="border: 1px solid black;">Edits existing fields or creates new fields.  Can use all sorts of conditional logic.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Table vs. Fields, which does what?</h1>
        <p>A pair of commands, <tt><a href="fields">fields</a></tt> and <tt><a href="table">table</a></tt> which are often confused, but are worlds apart for what they actually do.  <tt>table</tt> is for prettifying things, but can have enormous [negative] performance implications.  <tt>fields</tt> on the other hand doesn't make things much prettier but is the complete opposite with respect to performance and is very useful to optimize searches.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="table">table</a></tt></td><td style="border: 1px solid black;">Formats output for "human consumption" into a nice, organized table.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="fields">fields</a></tt></td><td style="border: 1px solid black;">Removes fields from the existing output stream, often for increased performance.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Appending multiple data together</h1>
        <p><tt><a href="append">append</a></tt>, <tt><a href="appendcols">appendcols</a></tt>, and <tt><a href="appendpipe">appendpipe</a></tt> all have "append" in their name, but function in totally different ways.  </p>
        <p>Note that "append" here means something specific.  We do NOT generally recommend using any of the <tt>append</tt> methods to actually combine separate data together, there are better ways you'll learn later.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="append">append</a></tt></td><td style="border: 1px solid black;">Appends two data sets together, like if you pasted a second log file to the end of the first.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="appendcols">appendcols</a></tt></td><td style="border: 1px solid black;">Appends a second data set in as new *columns* in the existing rows, like if you paste new columns to the right side of a spreadsheet.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="appendpipe">appendpipe</a></tt></td><td style="border: 1px solid black;">Kind of like appending in the same data, useful in some niche use cases where you need to do calculations on the data, but also keep the data as raw events too.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>The first and easiest of the data analytics commands</h1>
        <p><tt><a href="head">head</a></tt>, <tt><a href="tail">tail</a></tt>, <tt><a href="top">top</a></tt>,and <tt><a href="rare">rare</a></tt> all work in similar ways, and their names are a giveaway.  </p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="head">head</a></tt></td><td style="border: 1px solid black;">Trims data to just the first N events (default 10).</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="tail">tail</a></tt></td><td style="border: 1px solid black;">Trims data to just the last N events (default 10).</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="top">top</a></tt></td><td style="border: 1px solid black;">Does some simple calculations and shows you the more common of the different values of a field are. (The "top 10" by default).</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="rare">rare</a></tt></td><td style="border: 1px solid black;">The inverse of <tt>top</tt>, <tt>rare</tt> shows you the least common of the different values of a field. (The "rarest 10" by default).</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Sorting data</h1>
        <p><tt><a href="sort">sort</a></tt> and <tt><a href="reverse">reverse</a></tt> both exist to sort data, which Splunk rarely (if ever) needs but people need all the time.  Because we're not machines.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="sort">sort</a></tt></td><td style="border: 1px solid black;">Sorts events ascending, descending, or in complex combinations.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="reverse">reverse</a></tt></td><td style="border: 1px solid black;">A special case of sort, just reverses the normal output direction of a search's events.  Has negative performance implications, though if that's what you need, you just deal with it.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Flipping X with Y</h1>
        <p><tt><a href="transpose">transpose</a></tt> is in a class of its own.  When used it swaps your X and your Y axes.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><a href="transpose"><tt>transpose</tt></a></td><td style="border: 1px solid black;">Swap your X and your Y.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Fixing weirdly structured data.  Or something like that.</h1>
        <p><a href="xyseries"><tt>xyseries</tt></a> and <a href="untable"><tt>untable</tt></a> are almost but not quite inverses of one another, and each modifies the structure of data to either "make it into a table" when it wasn't before, or to undo data that's too tabular.  Sorry fore the confusion, just see the examples.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="xyseries">xyseries</a></tt></td><td style="border: 1px solid black;">Converts data from a more "tabular" form to one that more closely resembles the output of stats.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="untable">untable</a></tt></td><td style="border: 1px solid black;">Converts data into a more "tabular" form.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Don't let your data ghost you!</h1>
        <p>The three commands <a href="makecontinuous"><tt>makecontinuous</tt></a>, <a href="filldown"><tt>filldown</tt></a>, and <a href="fillnull"><tt>fillnull</tt></a> all perform variations of "filling in missing values".  Makecontinuous just fills in gaps in non-contiguous events by adding events.  Fillnull fills in null values with some user-specified value, and filldown uses the previous value to fill in empty values. </p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="makecontinuous">makecontinuous</a></tt></td><td style="border: 1px solid black;">Fills in gaps in events by just adding empty events into the holes.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="filldown">filldown</a></tt></td><td style="border: 1px solid black;">Uses the previous value for a field to fill in gaps/missing values.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="fillnull">fillnull</a></tt></td><td style="border: 1px solid black;">Replaces null valued fields with some user-specified value instead.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>So, I'm weird and this is my favorite command.</h1>
        <p>While it's a fairly niche command, I think <a href="reltime"><tt>reltime</tt></a> underutilized.  Makes times into things like "5 minutes ago".</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="reltime">reltime</a></tt></td><td style="border: 1px solid black;">Converts times into a human-readable difference in time from "now", like "2 days ago".</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Changing field names</h1>
        <p><a href="rename"><tt>rename</tt></a> is a pretty simple command, I think you'll get the hang of it quickly.  Also keep in mind that many other commands like timechart, stats and others, all let you rename things during the command itself making <tt>rename</tt> often unnecessary.</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="rename">rename</a></tt></td><td style="border: 1px solid black;">Renames fields - and remember you can rename ugly/shorthand names to longer ones for readability, or rename long ones (or ones with spaces) temporarily to make it easier to work with it.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Regular Expressions are FUN!</h1>
        <p><a href="regex"><tt>regex</tt></a> and <a href="rex"><tt>rex</tt></a> both involve regular expressions, but in completely different ways.  <tt>regex</tt> lets you filter events by a regular expression, and <tt>rex</tt> lets you either create new fields from parsing "things" with regular expressions, or lets you do some simple replacing/substitution (using mode=sed).</p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="regex">regex</a></tt></td><td style="border: 1px solid black;">*FILTERS* data by a regular expression.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="rex">rex</a></tt></td><td style="border: 1px solid black;">Uses regular expressions to *CREATE* new fields from existing data.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>Serious Data analytics commands</h1>
        <p>There's a lot of meat here.  <a href="timechart"><tt>timechart</tt></a> creates time-oriented aggregations, whereas <a href="stats"><tt>stats</tt></a> is more general purpose and can create aggregations by practically anything, time or other fields as well.  Do note that "aggregations" can be mathematical, but they can ALSO be just thought of as "grouping" sometimes.</p>
        <p>In addition to those two, there's two even more mind blowing commands.  <a href="chart"><tt>chart</tt></a> is just like <tt>stats</tt> except it supports an "over" and also a "by" clause.  This is mind-boggling the first few times you see or use it, but it's really powerful.  Lastly, <a href="eventstats"><tt>eventstats</tt></a> lets you do stats-like calculations on the entire data set, *without* replacing that data set.  So, for instance, you can calculate a "grand total" for the data (in whole or "by" some criteria), and have that value tacked onto each event so you can do <tt>eval</tt> math/calculations with it, like find the percentages of totals.
          
        </p>
      </html>
    </panel>
    <panel>
      <html>
        <table style="border: 1px solid black;">
          <tr><th style="border: 1px solid black;">Command</th><th style="border: 1px solid black;">Description</th></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="timechart">timechart</a></tt></td><td style="border: 1px solid black;">Time-series aggregations and groupings.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="stats">stats</a></tt></td><td style="border: 1px solid black;">General purpose aggregations and groupings.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="chart">chart</a></tt></td><td style="border: 1px solid black;">Add a the ability to both slice and dice the data, *at the same time*.</td></tr>
          <tr><td style="border: 1px solid black;"><tt><a href="eventstats">eventstats</a></tt></td><td style="border: 1px solid black;">Can calculate over the entire data set, appending its results into each event.  This sounds weird and dumb, but once you see it you'll see the power.</td></tr>
        </table> 
      </html>
    </panel>
  </row>
</dashboard>